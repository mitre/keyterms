/*
 * NOTICE
 * This software was produced for the U.S. Government and is subject to the
 * Rights in Data-General Clause 5.227-14 (May 2014).
 * Copyright 2018 The MITRE Corporation. All rights reserved.
 * Approved for Public Release; Distribution Unlimited. Case 18-2165
 *
 * This project contains content developed by The MITRE Corporation.
 * If this code is used in a deployment or embedded within another project,
 * it is requested that you send an email to opensource@mitre.org
 * in order to let us know where this software is being used.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#!/usr/bin/env node

var mongoose = require('mongoose');

var log = require('../../utils/logger').logger;

// Initialize mongo/mongoose connection and models
var db = require('../../db').init({performCheck: false})
.then( function () {
	var Entry = mongoose.model('Entry');

	return Entry.find({}, {'_id': 1}).lean().exec();
})
.then( function (entries) {
	entries = entries.map(e => e._id);

	var Tag = mongoose.model('Tag');

	return Tag.update({}, {$pull: {entries: {$nin: entries}}}, {multi: true}).lean().exec();
})
.then( function (result) {
	log.info(`${result.nModified} of ${result.n} tags. Query Status: ${result.ok}`);

	var Tag = mongoose.model('Tag');

	return Tag.remove({entries: {$size: 0}}).lean().exec();
})
.then( function (result) {
	result = result.result;

	log.info(`${result.n} empty tags deleted. Query Status: ${result.ok}`);

	return true;
})
.catch( function (err) {
	console.log(err);
	process.exit(0);
})
.then( function () {
	log.info('Tag cleaning complete');
})
.finally( function () {
	mongoose.disconnect();
});
