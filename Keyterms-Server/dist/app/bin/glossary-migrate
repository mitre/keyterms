#!/usr/bin/env node

var mongoose = require('mongoose');
var targetDb = require('../db');

targetDb.init({performCheck: false})
.then(function() {
    var db = mongoose.connection.db;

    // Convert all Organizations to Glossaries
    return convertOrgsToGlossaries(db)
    .then(function() {
        // Refactor user 'organizations' field to 'glossaries'
        return refactorUserOrgToGlossary(db);
    })
    .then(function() {
        // Refactor entry 'org' field to 'glossary'
        return refactorEntryOrgToGlossary(db);
    })
    .then(function() {
        // Refactor tag 'org' field to 'glossary'
        return refactorTagOrgToGlossary(db);
    })
    .then( function () {
		console.log('\n\nDone.');
		return true;
	})
	.catch( function (err) {
		console.error('Catch all fired!');
		console.error(err.message);
		console.log('\n\n');
		console.error(err);
	})
	.finally( function () {
		mongoose.disconnect();
		console.log('Data Migration Complete!\n\n');
	});
});

var convertOrgsToGlossaries = function(db) {
    return db.collection('organizations').rename('glossaries');
}

var refactorUserOrgToGlossary = function(db) {
    return db.collection('users').updateMany({}, { $rename: {'organizations': 'glossaries', 'currentOrg': 'currentGlossary', 'defaultOrg': 'defaultGlossary'}});
}

var refactorEntryOrgToGlossary = function(db) {
    return db.collection('entries').updateMany({}, { $rename: {'org': 'glossary'}})
    .then(function() {
        // For any entries that have 'org' as the view scope, change it to 'glossary'
        return db.collection('entries').updateMany({'viewScope': 'org'}, { $set: {'viewScope': 'glossary'}});
    })
    .then(function() {
        // For any entries that have 'org' as the edit scope, change it to 'glossary'
        return db.collection('entries').updateMany({'editScope': 'org'}, { $set: {'editScope': 'glossary'}});
    });
}

var refactorTagOrgToGlossary = function(db) {
    return db.collection('tags').updateMany({}, { $rename: {'org': 'glossary'}});
}
